{"version":3,"sources":["webpack:///./src/utils/tagsParser.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/post-link.js","webpack:///./src/pages/index.js"],"names":["TagsParset","props","className","tags","map","tag","i","isMain","key","Header","siteTitle","to","defaultProps","Layout","children","Fragment","PostLink","post","frontmatter","slug","src","thumbs","alt","title","date","IndexPage","Posts","data","allMarkdownRemark","edges","filter","edge","node","id","pageQuery"],"mappings":"+IAAA,2DAGe,SAASA,EAAWC,GAC/B,OACI,wBAAIC,UAAU,QACTD,EAAME,KAAKC,KAAI,SAACC,EAAIC,GACjB,OACI,wBAAIJ,UAAS,OAAQD,EAAMM,OAAS,QAAS,IAAhC,KAAsCN,EAAMM,OAAS,GAAKF,GAA1D,IAAkEG,IAAKF,GAApF,IAAyFD,S,kCCR7G,qCAIMI,GAJN,UAIe,SAAC,GAAD,EAAGC,UAAH,OACT,gCACE,kBAAC,OAAD,CAAMC,GAAG,KAAT,UACA,6BACE,kBAAC,OAAD,CAAMA,GAAG,KAAT,SACA,kBAAC,OAAD,CAAMA,GAAG,UAAT,aAUVF,EAAOG,aAAe,CACpBF,UAAU,IAGGD,O,wHCJAI,G,UAdA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEhB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,MACE,8BAAOD,M,oCCPA,SAASE,EAAT,GAA4B,IAARC,EAAO,EAAPA,KAC/B,OACI,kBAAC,OAAD,CAAMf,UAAU,OAAOS,GAAIM,EAAKC,YAAYC,MACxC,yBAAKC,IAAKH,EAAKC,YAAYG,OAAQC,IAAI,UACvC,4BAAQpB,UAAU,SAASe,EAAKC,YAAYK,OAC5C,yBAAKrB,UAAU,QAAQe,EAAKC,YAAYM,MACxC,yBAAKtB,UAAU,aACX,kBAAC,IAAD,CAAYK,QAAQ,EAAMJ,KAAMc,EAAKC,YAAYf,S,oBCYlDsB,UAhBG,SAAC,GAIZ,IACCC,EADF,EAHJC,KACEC,kBAAqBC,MAIpBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKd,YAAYM,QACvCpB,KAAI,SAAA2B,GAAI,OAAI,kBAACf,EAAD,CAAUR,IAAKuB,EAAKC,KAAKC,GAAIhB,KAAMc,EAAKC,UACvD,OACA,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAKT,MAAM,SACX,6BAASrB,UAAU,YAAYwB,K,IAOtBQ,EAAS,c","file":"component---src-pages-index-js-3e44ae3fa4a083773985.js","sourcesContent":["import React from 'react';\n\n\nexport default function TagsParset(props){\n    return (\n        <ul className=\"tags\">\n            {props.tags.map((tag,i)=>{\n                return(\n                    <li className={`tag${props.isMain ? '-main' :''} ${props.isMain ? '' : tag} `} key={i}>#{tag}</li>\n                )\n            })}\n        </ul>\n    )\n}\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport './header.scss';\nconst Header = ({ siteTitle }) => (\n      <header>\n        <Link to=\"/\">Kococo</Link>\n        <nav>\n          <Link to=\"/\">Posts</Link>\n          <Link to=\"/about\">about</Link>\n\n        </nav>\n      </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Header from \"./header\"\nimport \"./layout.scss\"\n\nconst Layout = ({ children }) => {\n\n  return (\n    <React.Fragment>\n      <Header/>\n        <main>{children}</main>\n    </React.Fragment>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport TagsParser from 'utils/tagsParser';\nexport default function PostLink({ post }){\n    return(\n        <Link className=\"card\" to={post.frontmatter.slug}>\n            <img src={post.frontmatter.thumbs} alt=\"thumb\"></img>\n            <strong className=\"title\">{post.frontmatter.title}</strong>\n            <div className=\"date\">{post.frontmatter.date}</div>\n            <div className=\"card-tags\">\n                <TagsParser isMain={true} tags={post.frontmatter.tags}></TagsParser>\n            </div>\n        </Link>\n    )\n}\n\n\n","import React from \"react\"\nimport Layout from \"components/layout\"\nimport SEO from \"components/seo\"\nimport PostLink from \"components/post-link\"\nimport \"./contents.scss\"\nimport \"./index.scss\"\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date)\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\n  return (\n  <Layout>\n    <SEO title=\"Home\" />\n    <section className=\"Contents\">{Posts}</section>\n  </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n            title\n            tags\n            thumbs\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}